#version: '3.8'
#
#services:
#  php:
#    container_name: php
#    build:
#      context: .
#      dockerfile: Dockerfile
#    volumes:
#      - ./symfony:/var/www/symfony
#    depends_on:
#      database:
#        condition: service_healthy
#
#  nginx:
#    container_name: nginx
#    image: nginx:stable-alpine
#    ports:
#      - '8080:80'
#    volumes:
#      - ./symfony:/var/www/symfony
#      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
#    depends_on:
#      - php
#      - database
#
####> doctrine/doctrine-bundle ###
#  database:
#    container_name: database
#    image: postgres:${POSTGRES_VERSION:-15}-alpine
#    environment:
#      POSTGRES_DB: ${POSTGRES_DB:-app}
#      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-Pass123}
#      POSTGRES_USER: ${POSTGRES_USER:-app}
#    volumes:
#      - database_data:/var/lib/postgresql/data:rw
#    healthcheck:
#      test: [ "CMD-SHELL", "pg_isready -U app" ]
#      interval: 30s
#      timeout: 30s
#      retries: 3
#      # You may use a bind-mounted host directory instead, so that it is harder to accidentally remove the volume and lose all your data!
#      # - ./docker/db/data:/var/lib/postgresql/data:rw
####< doctrine/doctrine-bundle ###
#
#volumes:
####> doctrine/doctrine-bundle ###
#  database_data:
####< doctrine/doctrine-bundle ###


version: '3.8'

services:
  php:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: php
    volumes:
      - .:/var/www/symfony
    depends_on:
      - database

  nginx:
    image: nginx:stable-alpine
    container_name: nginx
    ports:
      - '8080:80'
    volumes:
      - .:/var/www/symfony
      - ./nginx.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - php

  database:
    image: postgres:13-alpine
    container_name: database
    environment:
      POSTGRES_DB: symfony
      POSTGRES_USER: app
      POSTGRES_PASSWORD: secret
    volumes:
      - database_data:/var/lib/postgresql/data

volumes:
  database_data:

